<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/WXApi.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/WXApi</TokenIdentifier>
			<Abstract type="html">微信Api接口函数类

该类封装了微信终端SDK的所有接口</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
            
			
			<NodeRef refid="43"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/registerApp:</TokenIdentifier>
			<Abstract type="html">WXApi的成员函数，向微信终端程序注册第三方应用。

需要在每次启动第三方应用程序时调用。第一次调用后，会在微信的可用应用列表中出现，默认开启MTA数据上报。
iOS7及以上系统需要调起一次微信才会出现在微信的可用应用列表中。
@attention 请保证在主线程中调用此函数</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)registerApp:(NSString *)appid</Declaration>
			<Parameters>
				<Parameter>
					<Name>appid</Name>
					<Abstract type="html">微信开发者ID</Abstract>
				</Parameter><Parameter>
					<Name>typeFlag</Name>
					<Abstract type="html">应用支持打开的文件类型</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">成功返回YES，失败返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/registerApp:</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/registerApp:enableMTA:</TokenIdentifier>
			<Abstract type="html">WXApi的成员函数，向微信终端程序注册第三方应用。

需要在每次启动第三方应用程序时调用。第一次调用后，会在微信的可用应用列表中出现。
iOS7及以上系统需要调起一次微信才会出现在微信的可用应用列表中。
@attention 请保证在主线程中调用此函数</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)registerApp:(NSString *)appid enableMTA:(BOOL)isEnableMTA</Declaration>
			<Parameters>
				<Parameter>
					<Name>appid</Name>
					<Abstract type="html">微信开发者ID</Abstract>
				</Parameter><Parameter>
					<Name>isEnableMTA</Name>
					<Abstract type="html">是否支持MTA数据上报</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">成功返回YES，失败返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/registerApp:enableMTA:</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/registerAppSupportContentFlag:</TokenIdentifier>
			<Abstract type="html">WXApi的成员函数，向微信终端程序注册应用支持打开的文件类型。

需要在每次启动第三方应用程序时调用。调用后并第一次成功分享数据到微信后，会在微信的可用应用列表中出现。</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (void)registerAppSupportContentFlag:(UInt64)typeFlag</Declaration>
			<Parameters>
				<Parameter>
					<Name>typeFlag</Name>
					<Abstract type="html">应用支持打开的数据类型, enAppSupportContentFlag枚举类型 “|” 操作后结果</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/registerAppSupportContentFlag:</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/handleOpenURL:delegate:</TokenIdentifier>
			<Abstract type="html">处理微信通过URL启动App时传递的数据

需要在 application:openURL:sourceApplication:annotation:或者application:handleOpenURL中调用。</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)handleOpenURL:(NSURL *)url delegate:(id&lt;WXApiDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>url</Name>
					<Abstract type="html">微信启动第三方应用时传递过来的URL</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract type="html">WXApiDelegate对象，用来接收微信触发的消息。</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">成功返回YES，失败返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/handleOpenURL:delegate:</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/isWXAppInstalled</TokenIdentifier>
			<Abstract type="html">检查微信是否已被用户安装</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)isWXAppInstalled</Declaration>
			
			<ReturnValue><Abstract type="html">微信已安装返回YES，未安装返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/isWXAppInstalled</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/isWXAppSupportApi</TokenIdentifier>
			<Abstract type="html">判断当前微信的版本是否支持OpenApi</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)isWXAppSupportApi</Declaration>
			
			<ReturnValue><Abstract type="html">支持返回YES，不支持返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/isWXAppSupportApi</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/getWXAppInstallUrl</TokenIdentifier>
			<Abstract type="html">获取微信的itunes安装地址</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (NSString *)getWXAppInstallUrl</Declaration>
			
			<ReturnValue><Abstract type="html">微信的安装地址字符串。</Abstract></ReturnValue>
			<Anchor>//api/name/getWXAppInstallUrl</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/getApiVersion</TokenIdentifier>
			<Abstract type="html">获取当前微信SDK的版本号</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (NSString *)getApiVersion</Declaration>
			
			<ReturnValue><Abstract type="html">返回当前微信SDK的版本号</Abstract></ReturnValue>
			<Anchor>//api/name/getApiVersion</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/openWXApp</TokenIdentifier>
			<Abstract type="html">打开微信</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)openWXApp</Declaration>
			
			<ReturnValue><Abstract type="html">成功返回YES，失败返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/openWXApp</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/sendReq:</TokenIdentifier>
			<Abstract type="html">发送请求到微信，等待微信返回onResp

函数调用后，会切换到微信的界面。第三方应用程序等待微信返回onResp。微信在异步处理完成后一定会调用onResp。支持以下类型
SendAuthReq、SendMessageToWXReq、PayReq等。</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)sendReq:(BaseReq *)req</Declaration>
			<Parameters>
				<Parameter>
					<Name>req</Name>
					<Abstract type="html">具体的发送请求，在调用函数后，请自己释放。</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">成功返回YES，失败返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/sendReq:</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/sendAuthReq:viewController:delegate:</TokenIdentifier>
			<Abstract type="html">发送Auth请求到微信，支持用户没安装微信，等待微信返回onResp

函数调用后，会切换到微信的界面。第三方应用程序等待微信返回onResp。微信在异步处理完成后一定会调用onResp。支持SendAuthReq类型。</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)sendAuthReq:(SendAuthReq *)req viewController:(UIViewController *)viewController delegate:(id&lt;WXApiDelegate&gt;)delegate</Declaration>
			<Parameters>
				<Parameter>
					<Name>req</Name>
					<Abstract type="html">具体的发送请求，在调用函数后，请自己释放。</Abstract>
				</Parameter><Parameter>
					<Name>viewController</Name>
					<Abstract type="html">当前界面对象。</Abstract>
				</Parameter><Parameter>
					<Name>delegate</Name>
					<Abstract type="html">WXApiDelegate对象，用来接收微信触发的消息。</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">成功返回YES，失败返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/sendAuthReq:viewController:delegate:</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/WXApi/sendResp:</TokenIdentifier>
			<Abstract type="html">收到微信onReq的请求，发送对应的应答给微信，并切换到微信界面

函数调用后，会切换到微信的界面。第三方应用程序收到微信onReq的请求，异步处理该请求，完成后必须调用该函数。可能发送的相应有
GetMessageFromWXResp、ShowMessageFromWXResp等。</Abstract>
			<DeclaredIn>WXApi.h</DeclaredIn>
			
			<Declaration>+ (BOOL)sendResp:(BaseResp *)resp</Declaration>
			<Parameters>
				<Parameter>
					<Name>resp</Name>
					<Abstract type="html">具体的应答内容，调用函数后，请自己释放</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">成功返回YES，失败返回NO。</Abstract></ReturnValue>
			<Anchor>//api/name/sendResp:</Anchor>
            <NodeRef refid="43"/>
		</Token>
		
        
        
	</File>
</Tokens>